---
import { Redis } from '@upstash/redis/cloudflare';

import { REDIS_UPVOTE_KEY } from '@/consts';
import { getAllPosts } from '@/utils';

const redis = Redis.fromEnv(Astro.locals.runtime.env);
const posts = await getAllPosts();

const scores = await redis.zrange(REDIS_UPVOTE_KEY, 0, 4, {
	rev: true,
	withScores: true,
});
const scoreMap = new Map<string, number>();
for (let i = 0; i < scores.length; i += 2) {
	scoreMap.set(scores[i] as string, scores[i + 1] as number);
}

const popularPosts = posts
	.map((post, index) => ({
		...post,
		score: scoreMap.get(post.id) || 0,
		originalIndex: index,
	}))
	.sort((a, b) => {
		if (b.score !== a.score) {
			return b.score - a.score;
		}
		return a.originalIndex - b.originalIndex;
	})
	.slice(0, 5);

Astro.response.headers.set('Cache-Control', 'public, max-age=3600');
---

<ul>
	{
		popularPosts.map((post) => (
			<li>
				<a href={`/blog/${post.id}/`}>{post.data.title}</a>
			</li>
		))
	}
</ul>
